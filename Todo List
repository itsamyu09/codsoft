import tkinter as tk
from tkinter import messagebox
from PIL import Image, ImageTk

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List Application")
        self.root.configure(bg='#add8e6')  
        self.original_image = Image.open("C:\\Users\\SAMYUKTHA\\OneDrive\\Pictures\\Saved Pictures\\to do list.jpg")
        
       
        self.photo = ImageTk.PhotoImage(self.original_image)
        self.image_label = tk.Label(root, image=self.photo, bg='#add8e6')
        self.image_label.grid(row=0, column=2, rowspan=3, padx=10, pady=10, sticky='nsew')

        
        self.heading_label = tk.Label(root, text="To-Do List", font=('Helvetica', 18, 'bold'), bg='#add8e6')
        self.heading_label.grid(row=0, column=0, columnspan=2, padx=10, pady=10, sticky='n')

     
        self.task_var = tk.StringVar()
        self.task_entry = tk.Entry(root, textvariable=self.task_var, width=50, font=('Helvetica', 12))
        self.task_entry.grid(row=1, column=0, padx=10, pady=5, sticky='ew', columnspan=2)

      
        self.add_task_button = tk.Button(root, text="Add Task", width=15, command=self.add_task, bg='#90ee90', font=('Helvetica', 12))
        self.add_task_button.grid(row=1, column=1, padx=10, pady=5, sticky='e')

       
        self.task_frame = tk.Frame(root, bg='#add8e6')
        self.task_frame.grid(row=2, column=0, columnspan=2, padx=10, pady=10, sticky="nsew")

       
        root.grid_rowconfigure(2, weight=1)
        root.grid_columnconfigure(0, weight=1)
        root.grid_columnconfigure(1, weight=1)
        root.grid_columnconfigure(2, weight=1)

        self.tasks = []

        
        self.root.bind("<Configure>", self.resize_image)

    def resize_image(self, event):
       
        new_width = self.root.winfo_width() // 3 
        new_height = self.root.winfo_height() - self.heading_label.winfo_height() - self.task_entry.winfo_height() - self.add_task_button.winfo_height() - 60  
        
        if new_width > 0 and new_height > 0:
            resized_image = self.original_image.resize((new_width, new_height), Image.LANCZOS)
            self.photo = ImageTk.PhotoImage(resized_image)
            self.image_label.config(image=self.photo)
            self.image_label.image = self.photo 

    def add_task(self):
        task_text = self.task_var.get()
        if task_text:
            self.task_var.set("")
            task_frame = tk.Frame(self.task_frame, bg='#add8e6')
            task_frame.pack(fill='x', pady=5)
            var = tk.BooleanVar()
            chk = tk.Checkbutton(task_frame, text=task_text, variable=var, bg='#add8e6', font=('Helvetica', 12))
            chk.pack(side='left')
            del_button = tk.Button(task_frame, text="Delete", command=lambda: self.delete_task(task_frame), bg='#ff6961', font=('Helvetica', 12))
            del_button.pack(side='left')
            self.tasks.append((task_frame, var))
        else:
            messagebox.showwarning("Input Error", "Task cannot be empty")

    def delete_task(self, task_frame):
        task_frame.destroy()

if __name__ == "__main__":
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()

